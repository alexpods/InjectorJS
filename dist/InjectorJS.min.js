!function(a,b,c,d){if("function"==typeof define&&define.amd)define(b,c,d);else if("object"==typeof exports&&exports){for(var e=0,f=c.length;f>e;++e){var g=c[e];"string"==typeof g&&(g=g.replace(/([A-Z]+)/g,function(a){return"-"+a.toLowerCase()}).replace(/^-/,""),c[e]=require(g))}var h=d.apply(a,c);for(var i in h)exports[i]=h[i]}else{for(var e=0,f=c.length;f>e;++e){var g=c[e];if("string"==typeof g){if(!(g in a))throw new Error('"'+b+'" dependent on non exited module "'+g+'"!');c[e]=a[g]}}a[b]=d.apply(a,c)}}(new Function("return this")(),"InjectorJS",["ClazzJS"],function(a,b){var c=a.namespace,d=a.clazz,e=a.meta;c("InjectorJS",function(a,c){a("Injector",function(a){return{properties:{defaultFactory:{type:["object",{instanceOf:"Factories/Abstract"}],constraints:{exists:function(a){return this.hasFactory(a.getName())}}},factory:{type:["hash",{element:["object",{instanceOf:"Factories/Abstract"}]}],"default":{}},object:{type:["hash"],"default":{}},objectCreator:{type:["hash"],"default":{}},getter:{type:["function"]}},methods:{has:function(a){return this.hasObject(a)||this.hasObjectCreator(a)},get:function(a){if(!this.hasObject(a)){if(!this.hasObjectCreator(a))throw new Error('Factory method for object "'+a+"' does not exists!'");this.setObject(a,this.getObjectCreator(a).call()),this.removeObjectCreator(a)}return this.getObject(a)},set:function(){if(_.isObject(arguments[0])){var a=arguments[0];for(var b in a)for(var c in a[b])this.setObjectCreator(c,this.createObjectCreator(b,a[b][c]))}else this.setObjectCreator(arguments[0],this.createObjectCreator(arguments[1],arguments[2]));return this},getGetterMethod:function(){if(!this.hasGetter()){var a=this;this.setGetter(function(b){return a.get(b)})}return this.getGetter()},createObjectCreator:function(a,c){_.isUndefined(a)&&(c=a,a=b);var d=this,e=_.isUndefined(a)?this.getDefaultFactory():this.getFactory(a);return function(){var a=_.isFunction(c)?c.call(e,d.getGetterMethod()):c;return e.create(a)}}}}}),a("ParameterProcessor",function(a){return{constants:{PROCESSORS:{type:e("/ClazzJS/Property/Type"),constraints:e("/ClazzJS/Property/Constraints"),converters:e("/ClazzJS/Property/Converters")}},methods:{process:function(a,b,c){for(var d=["converters","constraints","default","type"],e=0,f=d.length;f>e;++e)if(d[e]in b)switch(d[e]){case"type":case"constraints":case"converters":a=this.const("PROCESSORS")(d[e])().apply(a,b[d[e]],c);break;case"default":var g=b[d[e]];_.isFunction(g)&&(g=g.call()),(_.isUndefined(a)||_.isNull(a))&&(a=g)}return a}}}}),c("Factories",function(a){a("Abstract",function(a,b){return{methods:{getName:function(){throw new Error("You must specify type name in child clazz!")},create:function(a){return this.createObject(this.processParams(a))},createObject:function(a){throw new Error('You must realize "createObject" method in child clazz!')},getParamsDefinitions:function(){return{}},processParams:function(a){var c=this.getParamsDefinitions();for(var d in a){if(!(d in c))throw new Error('Parameter "'+d+'" does not defined!');a[d]=b.process(a[d],c[d],d)}return a}}}}),a("Clazz","Abstract",function(a,b){return{methods:{getName:function(){return"clazz"},getParamsDefinitions:function(){return{name:{type:["string"],required:!0},parent:{type:["function"]},deps:{type:["array"],"default":[]}}},createObject:function(a){return b(a.name,a.parent,a.deps)}}}}),a("Parameter","Abstract",function(a){return{methods:{getName:function(){return"parameter"},create:function(a){return a}}}}),a("Service","Abstract",function(a){return{methods:{getName:function(){return"service"},getParamsDefinitions:function(){return{"class":{type:["function"],required:!0},init:{type:["array"],"default":[]},call:{type:["hash",{element:{type:"array"}}],"default":{}}}},createObject:function(a){function b(a,b){var c=function(){return a.apply(this,b)};return c.prototype=a.prototype,new c}var c=b(a.class,a.init);for(var d in a.call)c[c].apply(c,a.call[d]);return c}}}})})});var f=d("/InjectorJS/Injector"),g=d("/InjectorJS/ParameterProcessor"),h=f.create(),i=g.create(),j=d("/InjectorJS/Factories/Abstract",[i]),k=d("/InjectorJS/Factories/Parameter",j),l=d("/InjectorJS/Factories/Clazz",j,[d]),m=d("/InjectorJS/Factories/Service",j),n=k.create(),o=l.create(),p=m.create();return h.setFactory(n.getName(),n).setFactory(o.getName(),o).setFactory(p.getName(),p).setDefaultFactory(n),{Factory:{Abstract:j,Parameter:k,Clazz:l,Service:m},Injector:f,ParameterProcessor:g,injector:h,parameterProcessor:i}});
//# sourceMappingURL=dist/InjectorJS.min.map